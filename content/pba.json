{
  "pba": {
    "status": "ACTIVE",
    "authorInfo": {
      "author": "AIA",
      "email": "PDLYMERAIA@pdl.internal.ericsson.com",
      "publishingDate": "15/03/2017 10:47:00",
      "location": "Athlone"
    },
    "templateInfo": {
      "id": "template:aia:beam-dsl-xml-template:0.0.1",
      "name": "beam-dsl-xml-template",
      "title": "Beam DSL XML template",
      "version": "0.0.1",
      "description": "This template is used to create Beam DSL XML based flow."
    },
    "icon": "<icon path>",
    "scmInfo": {
      "scm": "",
      "scmTag": ""
    },
    "processorInfo": {
      "id": "service:processor:beam:2.3",
      "technology": "Beam",
      "version": "2.3"
    },
    "extensionPoints": [
      {
        "technology": "file-beam",
        "description": "Use Beam TextIO to read from text file.",
        "name": "file-input",
        "uri": {
          "protocol": "file://",
          "address": "file",
          "args": [
            {
              "key": "format",
              "value": [
                [
                  ""
                ]
              ]
            }
          ]
        },
        "attributes": [
          {
            "key": "compression.type",
            "value": "",
            "isReadOnly": false,
            "help": "File compression types",
            "isRequired": false,
            "type": "string"
          }
        ],
        "id": "service:io:file-beam:1.0.0"
      },
      {
        "technology": "kafka-beam",
        "description": "Use Beam KafkaIO to read from kafka topic",
        "name": "kafka-input",
        "uri": {
          "protocol": "kafka://",
          "address": "input_topic",
          "args": [
            {
              "key": "format",
              "value": [
                [
                  "JSON",
                  "CSV"
                ]
              ]
            }
          ]
        },
        "attributes": [
          {
            "key": "bootstrap.servers",
            "value": "localhost:9092",
            "regex": ".*",
            "isReadOnly": false,
            "help": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrapping—this list only impacts the initial hosts used to discover the full set of servers. This list should be in the form host1:port1,host2:port2,...",
            "isRequired": true,
            "type": "string"
          },
          {
            "key": "group.id",
            "value": "<group_1>",
            "isReadOnly": false,
            "help": "A unique string that identifies the consumer group this consumer belongs to. This property is required if the consumer uses either the group management functionality by using subscribe(topic) or the Kafka-based offset management strategy.",
            "isRequired": true,
            "type": "string"
          },
          {
            "key": "max.poll.records",
            "value": "",
            "isReadOnly": false,
            "help": "The maximum polling records frequencey value.",
            "isRequired": true,
            "type": "string"
          },
          {
            "key": "key.deserializer",
            "value": "org.apache.kafka.common.serialization.StringDeserializer",
            "isReadOnly": false,
            "help": "Deserializer class for key that implements the Deserializer interface.",
            "isRequired": true,
            "type": "string"
          },
          {
            "key": "value.deserializer",
            "value": "org.apache.kafka.common.serialization.StringDeserializer",
            "isReadOnly": false,
            "help": "Deserializer class for value that implements the Deserializer interface.",
            "isRequired": true,
            "type": "string"
          }
        ],
        "id": "service:io:kafka-beam:0.10.2.1"
      }
    ],
    "integrationPoints": [
      {
        "technology": "file-beam",
        "description": "Use Beam TextIO to write out to text file",
        "name": "file-output",
        "uri": {
          "protocol": "file://",
          "address": "file",
          "args": [
            {
              "key": "format",
              "value": [
                [
                  ""
                ]
              ]
            }
          ]
        },
        "attributes": [
          {
            "key": "header",
            "value": "",
            "isReadOnly": false,
            "help": "Write data header to the specified file",
            "isRequired": false,
            "type": "string"
          },
          {
            "key": "footer",
            "value": "",
            "isReadOnly": false,
            "help": "Write data footer to the specified file",
            "isRequired": false,
            "type": "string"
          },
          {
            "key": "num.shards",
            "value": "",
            "isReadOnly": false,
            "help": "Number of shards for the output files.",
            "isRequired": false,
            "type": "string"
          },
          {
            "key": "shards.name.template",
            "value": "",
            "isReadOnly": false,
            "help": "Shard file name template.",
            "isRequired": false,
            "type": "string"
          },
          {
            "key": "suffix",
            "value": "",
            "isReadOnly": false,
            "help": "Suffix for the output file.",
            "isRequired": false,
            "type": "string"
          },
          {
            "key": "windowed.writes",
            "value": "false",
            "isReadOnly": false,
            "help": "Windowed writes enabled or not.",
            "isRequired": false,
            "type": "boolean"
          }
        ],
        "id": "service:io:file-beam:1.0.0"
      },
      {
        "technology": "kafka-beam",
        "description": "Use Beam KafkaIO to write out to kafka topic.",
        "name": "kafka-output",
        "uri": {
          "protocol": "kafka://",
          "address": "topic",
          "args": [
            {
              "key": "format",
              "value": [
                [
                  "JSON"
                ]
              ]
            }
          ]
        },
        "attributes": [
          {
            "key": "bootstrap.servers",
            "value": "localhost:9092",
            "isReadOnly": false,
            "help": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrapping—this list only impacts the initial hosts used to discover the full set of servers. This list should be in the form host1:port1,host2:port2,...",
            "isRequired": true,
            "type": "string"
          },
          {
            "key": "key.serializer",
            "value": "org.apache.kafka.common.serialization.StringSerializer",
            "isReadOnly": false,
            "help": "Serializer class for key that implements the Serializer interface.",
            "isRequired": true,
            "type": "string"
          },
          {
            "key": "value.serializer",
            "value": "org.apache.kafka.common.serialization.StringSerializer",
            "isReadOnly": false,
            "help": "Serializer class for value that implements the Serializer interface.",
            "isRequired": true,
            "type": "string"
          },
          {
            "key": "max.poll.records",
            "value": "",
            "isReadOnly": false,
            "help": "The maximum polling records frequencey value.",
            "isRequired": true,
            "type": "string"
          },
          {
            "key": "publish.value.only",
            "value": false,
            "isReadOnly": false,
            "help": "If this flag enabled in the flow xml property for the kafka output, it will publishe only values.",
            "isRequired": true,
            "type": "boolean"
          }
        ],
        "id": "service:io:kafka-beam:0.10.2.1"
      }
    ],
    "buildInfo": {
      "dependencies": [
        "service:io:file-beam:1.0.0",
        "service:io:kafka-beam:0.10.2.1"
      ]
    }
  }
}